version: 2
jobs:
  build:

    docker:
      - image: linuxbrew/linuxbrew

    working_directory: ~/repo

    steps:
        - checkout

        # Restore pip dependencies
        #- restore_cache:
        #    key: v1-pip-dependencies-{{ checksum "requirements.txt" }}

        # Restore homebrew dependencies
        #- restore_cache:
        #    key: v1-brew-dependencies-{{ checksum "install_brewed_dependencies.sh" }}

        # Restore general dependencies
        #- restore_cache:
        #    key: v1-general-dependencies-{{ checksum "base_installation.sh" }}

        # Install dependencies and applications and set the number of cpu cores to be used for end to end testing.
        - run:
            name: Install Dependencies
            command: |
              sudo apt-get update
              brew install python
              brew install wget
              sudo ln -s /home/linuxbrew/.linuxbrew/bin/python2 /bin/python
              sudo ln -s /home/linuxbrew/.linuxbrew/bin/pip2 /bin/pip
              /usr/bin/env bash -eo pipefail ./base_installation.sh
              nproc > concurrency.txt

        # Cache python dependencies
        - save_cache:
            paths:
              - ~/.local/lib/python2.7
            key: v1-pip-dependencies-{{ checksum "requirements.txt" }}

        # Cache homebrew dependencies
        - save_cache:
            paths:
              - /home/linuxbrew/.linuxbrew
            key: v1-brew-dependencies-{{ checksum "install_brewed_dependencies.sh" }}

        # Cache all other dependencies and data
        - save_cache:
            paths:
              - ~/repo/data
            key: v1-general-dependencies-{{ checksum "base_installation.sh" }}

        # Run the Unit Tests
        - run:
            name: Unit Testing
            command: |
              cd testing
              nosetests -v

        # Run the end-to-end test
        - run:
            name: End-to-end Testing
            command: |
              /usr/bin/env bash -eo pipefail ./testing/test_metannotate_end_to_end.sh
